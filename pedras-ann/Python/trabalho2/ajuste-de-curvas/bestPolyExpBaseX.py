from methods import *
import matplotlib.pyplot as plt
from math import *


x = [0.538, 0.5792, 0.6227, 0.7279, 0.7577, 0.8004, 0.8957, 0.9367, 0.979, 1.0892, 1.1221, 1.183, 1.2629, 1.3308, 1.3411, 1.4256, 1.473, 1.5219, 1.5833, 1.6597, 1.7322, 1.8035, 1.836, 1.8731, 1.9314, 2.0335, 2.0573, 2.1236, 2.171, 2.2629, 2.3053, 2.3712, 2.4425, 2.4841, 2.5796, 2.6406, 2.6578, 2.7574, 2.8155, 2.8571, 2.9029, 2.9451]
y = [0.802, 1.1394, 0.0486, 0.3551, 0.8311, 1.2288, 0.3048, 1.6233, 1.9927, 3.0719, 3.2114, 3.3398, 3.9331, 4.9354, 5.429, 6.3845, 7.3922, 7.5692, 8.9431, 10.4398, 12.8271, 14.0388, 16.1197, 16.4211, 18.8418, 22.889, 22.2703, 25.746, 28.1555, 32.5695, 34.1801, 37.8818, 41.9832, 45.3097, 50.9257, 55.8914, 56.6792, 65.247, 69.4694, 73.1957, 77.7291, 81.8614]
values = [1.3315, 1.9485, 2.7178, 2.7411, 2.9228]

#linearização, transformando y em ln(y) e x em ln(x)
for i in range(0, len(y)):
    y[i] = log(y[i])

for i in range(0, len(x)):
    x[i] = log(x[i])

    

z, b = best_poly(x,y, 1) 

a = exp(z) # a função te retorna um valor z = ln(a), então isola a e obtém a = exp(z)

print('Coefs:\n',f'{a}, {b}', end=',')

def p(x, a, b):
	return a * pow(x, b) 

print()
print('Values:\n')
for value in values:
    print(f'{(p(value, a, b))}', end=", ")
print("")
